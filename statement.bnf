

     negatedStatement                      ::=   "¬"<NO_WHITESPACE>statement ;

     parenthesisedStatement                ::=   "(" statement ")" ;

     conjunctionOfStatements               ::=   statement "∧" statement ;

     disjunctionOfStatements               ::=   statement "∨" statement ;

     implicationBetweenStatements          ::=   statement ( "<=" | "=>" ) statement ;

     biconditionalBetweenStatements        ::=   statement ( "iff" | "<=>" ) statement ;

     materialConditionalBetweenStatements  ::=   statement "->" statement ;


     statement                             ::=   negatedStatement

                                             |   parenthesisedStatement

                                             |   conjunctionOfStatements
 
                                             |   disjunctionOfStatements
 
                                             |   implicationBetweenStatements
 
                                             |   biconditionalBetweenStatements
 
                                             |   materialConditionalBetweenStatements
 
                                             ;
